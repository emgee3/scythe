#! /usr/bin/env node

var   _ = require('lodash'),
     fs = require('fs'),
     ms = require('ms'),
  async = require('async'),
 moment = require('moment'),
 colors = require('colors'),
 Scythe = require('../index');

colors.setTheme({
  file: 'green',
  dir: 'blue',
  data: 'grey',
  error: 'red'
});

opts = require("nomnom")
  .option('force', {
    abbr: 'f',
    flag: true,
    help: 'force file deletion'
  })
  .option('threshold', { 
    abbr: 't',
    default: '7d',
    help: 'file deletion threshold',
    callback : function (threshold) {
      if (! ms(threshold)) return "Error: Threshold unparsable.".error + "\nExamples: 100, 5s, 10m, 6h, 3d";
    }
  })
  .option('verbose', { 
    abbr: 'v',
    flag : true
  })
  .parse();


opts._ = _.uniq(opts._);
if (opts._.length === 0) opts._ = ['.'];
opts.searchPaths = opts._;
opts.threshold = moment(new Date - ms(opts.threshold)).toDate();

async.every(opts._, isValidDirectory, function (res) {
  if (res) {
    var scythe = new Scythe(opts);
    scythe.execute(function () {});
  }
});



function isValidDirectory (dir, cb) {
  var stat;
  try {
    stat = fs.statSync(dir);
  } catch (e) {
    if (e.errno === 34) {
      console.error("Error: no such file or directory ".error + dir.error.bold);
    } else {
      console.error("Error: invalid directory ".error + dir.error.bold);
    }
    return cb(false);
  }

  if (stat.isDirectory()) {
    return cb(true);
  } else {
    console.error("Error: ".error + dir.error.bold + " is not a directory.".error);
    return cb(false);
  }
}